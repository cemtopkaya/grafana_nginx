volumes:
  prometheus_data: {}
  grafana_data: {}
  postgres_data: {}

services:
  nginx:
    container_name: ng
    image: docker.io/nginx:mainline
    volumes:
      - ./nginx:/etc/nginx/conf.d
      # - ./nginx/default.conf:/etc/nginx/sites-available/grafana.conf
    ports:
      - 80:80

  grafana:
    container_name: grafana
    image: docker.io/grafana/grafana:latest
    restart: unless-stopped
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/grafana.key.pub:/var/lib/grafana/grafana.key.pub
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
    ports:
      - 3090:3000

  # prometheus:
  #   image: docker.io/prom/prometheus:latest
  #   restart: unless-stopped
  #   volumes:
  #     - prometheus_data:/prometheus
  #   command:
  #     - '--config.file=/etc/prometheus/prometheus.yml'
  #     - '--storage.tsdb.path=/prometheus'
  #     - '--web.console.libraries=/etc/prometheus/console_libraries'
  #     - '--web.console.templates=/etc/prometheus/consoles'
  #     - '--web.enable-lifecycle'
  #   ports:
  #     - 9090:9090

  # postgres:
  #   image: docker.io/postgres:15
  #   environment:
  #     POSTGRES_PASSWORD: "secret"
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data

  # pgadmin:
  #   image: docker.io/dpage/pgadmin4:latest
  #   environment:
  #     PGADMIN_DISABLE_POSTFIX: "1"
  #     PGADMIN_DEFAULT_EMAIL: admin@example.com
  #     PGADMIN_DEFAULT_PASSWORD: secret
  #   ports:
  #     - 5050:80